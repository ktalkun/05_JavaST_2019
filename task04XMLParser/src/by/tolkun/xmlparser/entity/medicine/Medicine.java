//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2019.04.02 at 08:11:49 PM MSK
//


package by.tolkun.xmlparser.entity.medicine;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * <p>Java class for Medicine complex type.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 *
 * <pre>
 * &lt;complexType name="Medicine">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://www.tolkun.by/xmlparser}Name"/>
 *         &lt;element name="group"
 *         type="{http://www.tolkun.by/xmlparser}Group"/>
 *         &lt;element name="analogs"
 *         type="{http://www.tolkun.by/xmlparser}Name"
 *         maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="versions"
 *         type="{http://www.tolkun.by/xmlparser}Versions"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 * @author Kirill Tolkun
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Medicine", propOrder = {
        "name",
        "group",
        "analogs",
        "versions"
})
public class Medicine {

    /**
     * Logger of class {@code Medicine}.
     */
    private static final Logger LOGGER = LogManager.getLogger(Medicine.class);
    /**
     * Name of {@code Medicine}.
     */
    @XmlElement(required = true)
    private String name;
    /**
     * Group of {@code Medicine}.
     */
    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    private Group group;
    /**
     * Analogs of {@code Medicine}.
     */
    private List<String> analogs;
    /**
     * Version of {@code Medicine}.
     */
    @XmlElement(required = true)
    private Versions versions;

    /**
     * Default constructor.
     */
    public Medicine() {
        analogs = new ArrayList<>();
        LOGGER.debug("Medicine created.");
    }

    /**
     * Gets the value of the name property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setName(final String value) {
        this.name = value;
    }

    /**
     * Gets the value of the group property.
     *
     * @return possible object is
     * {@link Group }
     */
    public Group getGroup() {
        return group;
    }

    /**
     * Sets the value of the group property.
     *
     * @param value allowed object is
     *              {@link Group }
     */
    public void setGroup(final Group value) {
        this.group = value;
    }

    /**
     * Gets the value of the analogs property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the analogs
     * property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnalogs().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     *
     * @return list of {@code Analogs}
     */
    public List<String> getAnalogs() {
        return this.analogs;
    }

    /**
     * Gets the value of the versions property.
     *
     * @return possible object is
     * {@link Versions }
     */
    public Versions getVersions() {
        return versions;
    }

    /**
     * Sets the value of the versions property.
     *
     * @param value allowed object is
     *              {@link Versions }
     */
    public void setVersions(final Versions value) {
        this.versions = value;
    }

    /**
     * Compares this object to the specified object. The result is
     * {@code true} if the argument is not
     * {@code null} and is an {@code Medicine} object that
     * contains the same field values.
     *
     * @param o the object to compare with.
     * @return {@code true} if the objects are the same;
     * {@code false} otherwise.
     */
    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Medicine medicine = (Medicine) o;
        return Objects.equals(name, medicine.name)
                && group == medicine.group
                && Objects.equals(analogs, medicine.analogs)
                && Objects.equals(versions, medicine.versions);
    }

    /**
     * Returns a hash code for a {@code Medicine}.
     *
     * @return a hash code value for a {@code Medicine}.
     */
    @Override
    public int hashCode() {
        return Objects.hash(name, group, analogs, versions);
    }

    /**
     * Returns a {@code String} object representing this
     * {@code Medicine}.
     *
     * @return a string representation of the information of this
     * object
     */
    @Override
    public String toString() {
        return "Medicine{"
                + "name='" + name + '\''
                + ", group=" + group
                + ", analogs=" + analogs
                + ", versions=" + versions
                + '}';
    }
}
