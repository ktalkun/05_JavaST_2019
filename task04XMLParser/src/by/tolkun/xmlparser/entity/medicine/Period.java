//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2019.04.02 at 08:11:49 PM MSK
//


package by.tolkun.xmlparser.entity.medicine;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import java.util.Objects;


/**
 * <p>Java class for Period complex type.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 *
 * <pre>
 * &lt;complexType name="Period">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>int">
 *       &lt;attribute name="type"
 *       type="{http://www.tolkun.by/xmlparser}PeriodType" default="day" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 *
 * @author Kirill Tolkun
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Period", propOrder = {
        "value"
})
public class Period {

    /**
     * Logger of class {@code Period}.
     */
    private static final Logger LOGGER
            = LogManager.getLogger(Period.class);

    /**
     * Value of {@code Period}.
     */
    @XmlValue
    private int value;
    /**
     * Type of {@code Period}.
     */
    @XmlAttribute(name = "type")
    private PeriodType type;

    /**
     * Default constructor.
     */
    public Period() {
        LOGGER.debug("Period created.");
    }

    /**
     * Gets the value of the value property.
     *
     * @return value of {@code Period}
     */
    public int getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     *
     * @param inputValue of {@code Period}
     */
    public void setValue(final int inputValue) {
        this.value = inputValue;
    }

    /**
     * Gets the value of the type property.
     *
     * @return possible object is
     * {@link PeriodType }
     */
    public PeriodType getType() {
        if (type == null) {
            return PeriodType.DAY;
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     *
     * @param inputValue allowed object is
     *              {@link PeriodType }
     */
    public void setType(final PeriodType inputValue) {
        this.type = inputValue;
    }

    /**
     * Compares this object to the specified object. The result is
     * {@code true} if the argument is not
     * {@code null} and is an {@code Period} object that
     * contains the same field values.
     *
     * @param o the object to compare with.
     * @return {@code true} if the objects are the same;
     * {@code false} otherwise.
     */
    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Period period = (Period) o;
        return value == period.value
                && type == period.type;
    }

    /**
     * Returns a hash code for a {@code Period}.
     *
     * @return a hash code value for a {@code Period}.
     */
    @Override
    public int hashCode() {
        return Objects.hash(value, type);
    }

    /**
     * Returns a {@code String} object representing this
     * {@code Period}.
     *
     * @return a string representation of the information of this
     * object
     */
    @Override
    public String toString() {
        return "Period{"
                + "value=" + value
                + ", type=" + getType()
                + '}';
    }
}
