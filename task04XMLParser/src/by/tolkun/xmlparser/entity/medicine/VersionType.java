//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2019.04.02 at 08:11:49 PM MSK
//


package by.tolkun.xmlparser.entity.medicine;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VersionType.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VersionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="tablets"/>
 *     &lt;enumeration value="capsules"/>
 *     &lt;enumeration value="powder"/>
 *     &lt;enumeration value="drops"/>
 *     &lt;enumeration value="spray"/>
 *     &lt;enumeration value="liquid"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@XmlType(name = "VersionType")
@XmlEnum
public enum VersionType {

    /**
     * Tablets type.
     */
    @XmlEnumValue("tablets")
    TABLETS("tablets"),
    /**
     * Capsules type.
     */
    @XmlEnumValue("capsules")
    CAPSULES("capsules"),
    /**
     * Powder type.
     */
    @XmlEnumValue("powder")
    POWDER("powder"),
    /**
     * Drops type.
     */
    @XmlEnumValue("drops")
    DROPS("drops"),
    /**
     * Spray type.
     */
    @XmlEnumValue("spray")
    SPRAY("spray"),
    /**
     * Liquid type.
     */
    @XmlEnumValue("liquid")
    LIQUID("liquid");
    /**
     * Value of {@code VersionType}.
     */
    private final String value;

    /**
     * Constructor with parameters.
     *
     * @param v the string to create {@code VersionType}
     */
    VersionType(final String v) {
        value = v;
    }

    /**
     * Form {@code VersionType} from {@code v}.
     *
     * @param v the string to create enum
     * @return object of {@code VersionType}
     */
    public static VersionType fromValue(final String v) {
        for (VersionType c : VersionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

    /**
     * Get value of enum.
     *
     * @return value of enum element
     */
    public String value() {
        return value;
    }

}
