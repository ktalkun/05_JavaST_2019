//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2019.04.02 at 08:11:49 PM MSK
//


package by.tolkun.xmlparser.entity.medicine;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PeriodType.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PeriodType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="hour"/>
 *     &lt;enumeration value="day"/>
 *     &lt;enumeration value="week"/>
 *     &lt;enumeration value="month"/>
 *     &lt;enumeration value="year"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 * @author Kirill Tolkun
 */
@XmlType(name = "PeriodType")
@XmlEnum
public enum PeriodType {

    /**
     * Hour type of period.
     */
    @XmlEnumValue("hour")
    HOUR("hour"),
    /**
     * Day type of period.
     */
    @XmlEnumValue("day")
    DAY("day"),
    /**
     * Week type of period.
     */
    @XmlEnumValue("week")
    WEEK("week"),
    /**
     * Month type of period.
     */
    @XmlEnumValue("month")
    MONTH("month"),
    /**
     * Year type of period.
     */
    @XmlEnumValue("year")
    YEAR("year");
    /**
     * Value of {code PeriodType}.
     */
    private final String value;

    /**
     * Constructor with parameters.
     *
     * @param v the string to create {@code PeriodType}
     */
    PeriodType(final String v) {
        value = v;
    }

    /**
     * Form {@code PeriodType} from {@code v}.
     *
     * @param v the string to create enum
     * @return object of {@code PeriodType}
     */
    public static PeriodType fromValue(final String v) {
        for (PeriodType c : PeriodType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

    /**
     * Get value of enum.
     *
     * @return value of enum element
     */
    public String value() {
        return value;
    }

}
