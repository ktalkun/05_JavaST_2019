//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) R
// eference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2019.04.02 at 08:11:49 PM MSK
//


package by.tolkun.xmlparser.entity.medicine;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import java.util.Objects;


/**
 * <p>Java class for Certificate complex type.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 *
 * <pre>
 * &lt;complexType name="Certificate">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element name="date-issue"
 *         type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="date-expiration"
 *         type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="reg-organization"
 *         type="{http://www.tolkun.by/xmlparser}Name"/>
 *       &lt;/all>
 *       &lt;attribute name="number" use="required"
 *       type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 * @author Kirill Tolkun
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Certificate", propOrder = {

})
public class Certificate {

    /**
     * Logger of class {@code Certificate}.
     */
    private static final Logger LOGGER
            = LogManager.getLogger(Certificate.class);
    /**
     * Date of issue certificate.
     */
    @XmlElement(name = "date-issue", required = true)
    @XmlSchemaType(name = "date")
    private XMLGregorianCalendar dateIssue;
    /**
     * Date of expiration certificate.
     */
    @XmlElement(name = "date-expiration", required = true)
    @XmlSchemaType(name = "date")
    private XMLGregorianCalendar dateExpiration;
    /**
     * Name of registration organization.
     */
    @XmlElement(name = "reg-organization", required = true)
    private String regOrganization;
    /**
     * Unique identifier of certificate.
     */
    @XmlAttribute(name = "number", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    private String number;

    /**
     * Default constructor.
     */
    public Certificate() {
        LOGGER.debug("Certificate created.");
    }

    /**
     * Gets the value of the dateIssue property.
     *
     * @return possible object is
     * {@link XMLGregorianCalendar }
     */
    public XMLGregorianCalendar getDateIssue() {
        return dateIssue;
    }

    /**
     * Sets the value of the dateIssue property.
     *
     * @param value allowed object is
     *              {@link XMLGregorianCalendar }
     */
    public void setDateIssue(final XMLGregorianCalendar value) {
        this.dateIssue = value;
    }

    /**
     * Gets the value of the dateExpiration property.
     *
     * @return possible object is
     * {@link XMLGregorianCalendar }
     */
    public XMLGregorianCalendar getDateExpiration() {
        return dateExpiration;
    }

    /**
     * Sets the value of the dateExpiration property.
     *
     * @param value allowed object is
     *              {@link XMLGregorianCalendar }
     */
    public void setDateExpiration(final XMLGregorianCalendar value) {
        this.dateExpiration = value;
    }

    /**
     * Gets the value of the regOrganization property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getRegOrganization() {
        return regOrganization;
    }

    /**
     * Sets the value of the regOrganization property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setRegOrganization(final String value) {
        this.regOrganization = value;
    }

    /**
     * Gets the value of the number property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getNumber() {
        return number;
    }

    /**
     * Sets the value of the number property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setNumber(final String value) {
        this.number = value;
    }

    /**
     * Compares this object to the specified object. The result is
     * {@code true} if the argument is not
     * {@code null} and is an {@code Certificate} object that
     * contains the same field values.
     *
     * @param o the object to compare with.
     * @return {@code true} if the objects are the same;
     * {@code false} otherwise.
     */
    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Certificate that = (Certificate) o;
        return Objects.equals(dateIssue, that.dateIssue)
                && Objects.equals(dateExpiration, that.dateExpiration)
                && Objects.equals(regOrganization, that.regOrganization)
                && Objects.equals(number, that.number);
    }

    /**
     * Returns a hash code for a {@code Certificate}.
     *
     * @return a hash code value for a {@code Certificate}.
     */
    @Override
    public int hashCode() {
        return Objects.hash(dateIssue, dateExpiration, regOrganization, number);
    }

    /**
     * Returns a {@code String} object representing this
     * {@code Certificate}.
     *
     * @return a string representation of the information of this
     * object
     */
    @Override
    public String toString() {
        return "Certificate{"
                + "dateIssue=" + dateIssue
                + ", dateExpiration=" + dateExpiration
                + ", regOrganization='" + regOrganization + '\''
                + ", number='" + number + '\''
                + '}';
    }
}
